{"version":3,"file":"auth-BpZIaV-_.js","sources":["../../../../composables/auth.ts","../../../../stores/auth.ts"],"sourcesContent":["import type { AuthUser } from '~~/stores/auth'\r\n\r\nexport const useAuthStorage = (\r\n  { authTokenKey, authUserKey } = {\r\n    authTokenKey: 'auth.token',\r\n    authUserKey: 'auth.user',\r\n  },\r\n) => {\r\n  const user = useCookie<AuthUser>(authUserKey)\r\n  const token = useCookie<string>(authTokenKey)\r\n\r\n  const store = (newToken: string, newUser: Record<string, any>) => {\r\n    token.value = newToken\r\n    user.value = newUser\r\n  }\r\n\r\n  const clear = () => {\r\n    user.value = null\r\n    token.value = ''\r\n  }\r\n\r\n  return { store, clear, user, token }\r\n}\r\n","import { defineStore } from 'pinia'\r\n\r\nexport interface AuthUser extends Record<string, any> {}\r\n\r\nexport interface AuthState {\r\n  loggedIn: boolean\r\n  user: AuthUser | null\r\n  loading: boolean\r\n}\r\n\r\nexport const useAuthStore = defineStore({\r\n  id: 'auth',\r\n  state: (): AuthState => {\r\n    const { token, user } = useAuthStorage()\r\n\r\n    return {\r\n      loggedIn: !!token.value,\r\n      user: user.value,\r\n      loading: false,\r\n    }\r\n  },\r\n  actions: {\r\n    logout() {\r\n      const { clear } = useAuthStorage()\r\n      clear()\r\n\r\n      this.loggedIn = false\r\n      this.user = null\r\n    },\r\n  },\r\n})\r\n"],"names":[],"mappings":";;AAEO,MAAM,iBAAiB,CAC5B,EAAE,cAAc,gBAAgB;AAAA,EAC9B,cAAc;AAAA,EACd,aAAa;AACf,MACG;AACG,QAAA,OAAO,UAAoB,WAAW;AACtC,QAAA,QAAQ,UAAkB,YAAY;AAEtC,QAAA,QAAQ,CAAC,UAAkB,YAAiC;AAChE,UAAM,QAAQ;AACd,SAAK,QAAQ;AAAA,EAAA;AAGf,QAAM,QAAQ,MAAM;AAClB,SAAK,QAAQ;AACb,UAAM,QAAQ;AAAA,EAAA;AAGhB,SAAO,EAAE,OAAO,OAAO,MAAM,MAAM;AACrC;ACZO,MAAM,eAAe,YAAY;AAAA,EACtC,IAAI;AAAA,EACJ,OAAO,MAAiB;AACtB,UAAM,EAAE,OAAO,KAAK,IAAI,eAAe;AAEhC,WAAA;AAAA,MACL,UAAU,CAAC,CAAC,MAAM;AAAA,MAClB,MAAM,KAAK;AAAA,MACX,SAAS;AAAA,IAAA;AAAA,EAEb;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AACD,YAAA,EAAE,UAAU;AACZ;AAEN,WAAK,WAAW;AAChB,WAAK,OAAO;AAAA,IACd;AAAA,EACF;AACF,CAAC;"}