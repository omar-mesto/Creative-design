{
  "resolvedId": "C:/Users/Omar/Desktop/creaticve Design/node_modules/vue-gtag/dist/vue-gtag.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isPlainObject, isFunction } from '@vue/shared';\nimport { nextTick } from 'vue';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar load = function load(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    if (typeof document === \"undefined\") {\n      return;\n    }\n\n    var head = document.head || document.getElementsByTagName(\"head\")[0];\n    var script = document.createElement(\"script\");\n    script.async = true;\n    script.src = url;\n    script.defer = options.defer;\n\n    if (options.preconnectOrigin) {\n      var link = document.createElement(\"link\");\n      link.href = options.preconnectOrigin;\n      link.rel = \"preconnect\";\n      head.appendChild(link);\n    }\n\n    head.appendChild(script);\n    script.onload = resolve;\n    script.onerror = reject;\n  });\n};\nvar mergeDeep = function mergeDeep(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (!isPlainObject(target) || !isPlainObject(source)) {\n    return;\n  }\n\n  for (var key in source) {\n    if (isPlainObject(source[key])) {\n      if (!target[key]) {\n        Object.assign(target, _defineProperty({}, key, {}));\n      }\n\n      mergeDeep(target[key], source[key]);\n    } else {\n      Object.assign(target, _defineProperty({}, key, source[key]));\n    }\n  }\n\n  return mergeDeep.apply(void 0, [target].concat(sources));\n};\nvar isBrowser = function isBrowser() {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\") {\n    return false;\n  }\n\n  return true;\n};\nvar warn = function warn(text) {\n  var shouldLog = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!isBrowser() || process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  if (!shouldLog) {\n    return;\n  }\n\n  console.warn(\"[vue-gtag] \".concat(text));\n};\nvar validateScreenviewShape = function validateScreenviewShape() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  warn(\"Missing \\\"appName\\\" property inside the plugin options.\", obj.app_name == null);\n  warn(\"Missing \\\"name\\\" property in the route.\", obj.screen_name == null);\n  return obj;\n};\nfunction getPathWithBase() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var pathAsArray = path.split(\"/\");\n  var baseAsArray = base.split(\"/\");\n\n  if (pathAsArray[0] === \"\" && base[base.length - 1] === \"/\") {\n    pathAsArray.shift();\n  }\n\n  return baseAsArray.join(\"/\") + pathAsArray.join(\"/\");\n}\n\nvar getDefaultParams = function getDefaultParams() {\n  return {\n    bootstrap: true,\n    onReady: null,\n    onError: null,\n    onBeforeTrack: null,\n    onAfterTrack: null,\n    pageTrackerTemplate: null,\n    customResourceURL: \"https://www.googletagmanager.com/gtag/js\",\n    customPreconnectOrigin: \"https://www.googletagmanager.com\",\n    deferScriptLoad: false,\n    pageTrackerExcludedRoutes: [],\n    pageTrackerEnabled: true,\n    enabled: true,\n    disableScriptLoad: false,\n    pageTrackerScreenviewEnabled: false,\n    appName: null,\n    pageTrackerUseFullPath: false,\n    pageTrackerPrependBase: true,\n    pageTrackerSkipSamePath: true,\n    globalDataLayerName: \"dataLayer\",\n    globalObjectName: \"gtag\",\n    defaultGroupName: \"default\",\n    includes: null,\n    config: {\n      id: null,\n      params: {\n        send_page_view: false\n      }\n    }\n  };\n};\nvar params = {};\nvar setOptions = function setOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultParams = getDefaultParams();\n  params = mergeDeep(defaultParams, options);\n};\nvar getOptions = function getOptions() {\n  return params;\n};\n\nvar query = (function () {\n  var _window;\n\n  var _getOptions = getOptions(),\n      globalObjectName = _getOptions.globalObjectName;\n\n  if (!isBrowser() || typeof window[globalObjectName] === \"undefined\") {\n    return;\n  }\n\n  (_window = window)[globalObjectName].apply(_window, arguments);\n});\n\nvar config = (function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var _getOptions = getOptions(),\n      config = _getOptions.config,\n      includes = _getOptions.includes;\n\n  query.apply(void 0, [\"config\", config.id].concat(args));\n\n  if (Array.isArray(includes)) {\n    includes.forEach(function (domain) {\n      query.apply(void 0, [\"config\", domain.id].concat(args));\n    });\n  }\n});\n\nvar assignGlobalProperty = function assignGlobalProperty(id, value) {\n  if (!isBrowser()) {\n    return;\n  }\n\n  window[\"ga-disable-\".concat(id)] = value;\n};\n\nvar disable = (function () {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var _getOptions = getOptions(),\n      config = _getOptions.config,\n      includes = _getOptions.includes;\n\n  assignGlobalProperty(config.id, value);\n\n  if (Array.isArray(includes)) {\n    includes.forEach(function (domain) {\n      return assignGlobalProperty(domain.id, value);\n    });\n  }\n});\n\nvar optOut = (function () {\n  disable(true);\n});\n\nvar optIn = (function () {\n  disable(false);\n});\n\nvar router;\nvar setRouter = function setRouter(instance) {\n  router = instance;\n};\nvar getRouter = function getRouter() {\n  return router;\n};\n\nvar event = (function (name) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _getOptions = getOptions(),\n      includes = _getOptions.includes,\n      defaultGroupName = _getOptions.defaultGroupName;\n\n  if (params.send_to == null && Array.isArray(includes) && includes.length) {\n    params.send_to = includes.map(function (domain) {\n      return domain.id;\n    }).concat(defaultGroupName);\n  }\n\n  query(\"event\", name, params);\n});\n\nvar pageview = (function (param) {\n  if (!isBrowser()) {\n    return;\n  }\n\n  var template;\n\n  if (typeof param === \"string\") {\n    template = {\n      page_path: param\n    };\n  } else if (param.path || param.fullPath) {\n    var _getOptions = getOptions(),\n        useFullPath = _getOptions.pageTrackerUseFullPath,\n        useBase = _getOptions.pageTrackerPrependBase;\n\n    var router = getRouter();\n    var base = router && router.options.base;\n    var path = useFullPath ? param.fullPath : param.path;\n    template = _objectSpread2(_objectSpread2({}, param.name && {\n      page_title: param.name\n    }), {}, {\n      page_path: useBase ? getPathWithBase(path, base) : path\n    });\n  } else {\n    template = param;\n  }\n\n  if (template.page_location == null) {\n    template.page_location = window.location.href;\n  }\n\n  if (template.send_page_view == null) {\n    template.send_page_view = true;\n  }\n\n  event(\"page_view\", template);\n});\n\nvar screenview = (function (param) {\n  var _getOptions = getOptions(),\n      appName = _getOptions.appName;\n\n  if (!param) {\n    return;\n  }\n\n  var template;\n\n  if (typeof param === \"string\") {\n    template = {\n      screen_name: param\n    };\n  } else {\n    template = param;\n  }\n\n  template.app_name = template.app_name || appName;\n  event(\"screen_view\", template);\n});\n\nvar exception = (function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  event.apply(void 0, [\"exception\"].concat(args));\n});\n\nvar linker = (function (params) {\n  config(\"linker\", params);\n});\n\nvar time = (function (params) {\n  event(\"timing_complete\", params);\n});\n\nvar set = (function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  query.apply(void 0, [\"set\"].concat(args));\n});\n\nvar refund = (function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  event.apply(void 0, [\"refund\"].concat(args));\n});\n\nvar purchase = (function (params) {\n  event(\"purchase\", params);\n});\n\nvar customMap = (function (map) {\n  config({\n    custom_map: map\n  });\n});\n\nvar api = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  query: query,\n  config: config,\n  optOut: optOut,\n  optIn: optIn,\n  pageview: pageview,\n  screenview: screenview,\n  exception: exception,\n  linker: linker,\n  time: time,\n  set: set,\n  refund: refund,\n  purchase: purchase,\n  customMap: customMap,\n  event: event\n});\n\nvar attachApi = function attachApi(app) {\n  app.config.globalProperties.$gtag = api;\n};\n\nvar registerGlobals = (function () {\n  if (!isBrowser()) {\n    return;\n  }\n\n  var _getOptions = getOptions(),\n      enabled = _getOptions.enabled,\n      globalObjectName = _getOptions.globalObjectName,\n      globalDataLayerName = _getOptions.globalDataLayerName;\n\n  if (window[globalObjectName] == null) {\n    window[globalDataLayerName] = window[globalDataLayerName] || [];\n\n    window[globalObjectName] = function () {\n      window[globalDataLayerName].push(arguments);\n    };\n  }\n\n  window[globalObjectName](\"js\", new Date());\n\n  if (!enabled) {\n    optOut();\n  }\n\n  return window[globalObjectName];\n});\n\nvar mergeDefaultParams = function mergeDefaultParams(params) {\n  return _objectSpread2({\n    send_page_view: false\n  }, params);\n};\n\nvar addConfiguration = (function () {\n  var _getOptions = getOptions(),\n      config = _getOptions.config,\n      includes = _getOptions.includes;\n\n  query(\"config\", config.id, mergeDefaultParams(config.params));\n\n  if (Array.isArray(includes)) {\n    includes.forEach(function (domain) {\n      query(\"config\", domain.id, mergeDefaultParams(domain.params));\n    });\n  }\n});\n\nvar track = (function () {\n  var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _getOptions = getOptions(),\n      appName = _getOptions.appName,\n      proxy = _getOptions.pageTrackerTemplate,\n      useScreenview = _getOptions.pageTrackerScreenviewEnabled,\n      skipSamePath = _getOptions.pageTrackerSkipSamePath;\n\n  if (skipSamePath && to.path === from.path) {\n    return;\n  }\n\n  var template = to;\n\n  if (isFunction(proxy)) {\n    template = proxy(to, from);\n  } else if (useScreenview) {\n    template = validateScreenviewShape({\n      app_name: appName,\n      screen_name: to.name\n    });\n  }\n\n  if (useScreenview) {\n    screenview(template);\n    return;\n  }\n\n  pageview(template);\n});\n\nvar isRouteExcluded = function isRouteExcluded(route) {\n  var _getOptions = getOptions(),\n      routes = _getOptions.pageTrackerExcludedRoutes;\n\n  return routes.includes(route.path) || routes.includes(route.name);\n};\n\nvar addRoutesTracker = (function () {\n  var _getOptions2 = getOptions(),\n      onBeforeTrack = _getOptions2.onBeforeTrack,\n      onAfterTrack = _getOptions2.onAfterTrack;\n\n  var router = getRouter();\n  router.isReady().then(function () {\n    nextTick().then(function () {\n      var currentRoute = router.currentRoute;\n      addConfiguration();\n\n      if (isRouteExcluded(currentRoute.value)) {\n        return;\n      }\n\n      track(currentRoute.value);\n    });\n    router.afterEach(function (to, from) {\n      nextTick().then(function () {\n        if (isRouteExcluded(to)) {\n          return;\n        }\n\n        if (isFunction(onBeforeTrack)) {\n          onBeforeTrack(to, from);\n        }\n\n        track(to, from);\n\n        if (isFunction(onAfterTrack)) {\n          onAfterTrack(to, from);\n        }\n      });\n    });\n  });\n});\n\nvar bootstrap = (function () {\n  var _getOptions = getOptions(),\n      onReady = _getOptions.onReady,\n      onError = _getOptions.onError,\n      globalObjectName = _getOptions.globalObjectName,\n      globalDataLayerName = _getOptions.globalDataLayerName,\n      config = _getOptions.config,\n      customResourceURL = _getOptions.customResourceURL,\n      customPreconnectOrigin = _getOptions.customPreconnectOrigin,\n      deferScriptLoad = _getOptions.deferScriptLoad,\n      pageTrackerEnabled = _getOptions.pageTrackerEnabled,\n      disableScriptLoad = _getOptions.disableScriptLoad;\n\n  var isPageTrackerEnabled = Boolean(pageTrackerEnabled && getRouter());\n  registerGlobals();\n\n  if (isPageTrackerEnabled) {\n    addRoutesTracker();\n  } else {\n    addConfiguration();\n  }\n\n  if (disableScriptLoad) {\n    return;\n  }\n\n  return load(\"\".concat(customResourceURL, \"?id=\").concat(config.id, \"&l=\").concat(globalDataLayerName), {\n    preconnectOrigin: customPreconnectOrigin,\n    defer: deferScriptLoad\n  }).then(function () {\n    if (onReady) {\n      onReady(window[globalObjectName]);\n    }\n  })[\"catch\"](function (error) {\n    if (onError) {\n      onError(error);\n    }\n\n    return error;\n  });\n});\n\nvar install = function install(app) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var router = arguments.length > 2 ? arguments[2] : undefined;\n  attachApi(app);\n  setOptions(options);\n  setRouter(router);\n\n  if (getOptions().bootstrap) {\n    bootstrap();\n  }\n};\n\nexport default install;\nexport { addRoutesTracker, bootstrap, config, customMap, event, exception, install, linker, optIn, optOut, pageview, purchase, query, refund, screenview, set, setOptions, setRouter, time };\n",
      "start": 1712600371341,
      "end": 1712600371776,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712600371776,
      "end": 1712600371776,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712600371777,
      "end": 1712600371777,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712600371777,
      "end": 1712600371777,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712600371777,
      "end": 1712600371777,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712600371777,
      "end": 1712600371777,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712600371778,
      "end": 1712600371778,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712600371778,
      "end": 1712600371778,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712600371778,
      "end": 1712600371778,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { isPlainObject, isFunction } from \"@vue/shared\";\nimport { nextTick } from \"vue\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly)\n      symbols = symbols.filter(function(sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function(key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar load = function load2(url) {\n  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  return new Promise(function(resolve, reject) {\n    if (typeof document === \"undefined\") {\n      return;\n    }\n    var head = document.head || document.getElementsByTagName(\"head\")[0];\n    var script = document.createElement(\"script\");\n    script.async = true;\n    script.src = url;\n    script.defer = options.defer;\n    if (options.preconnectOrigin) {\n      var link = document.createElement(\"link\");\n      link.href = options.preconnectOrigin;\n      link.rel = \"preconnect\";\n      head.appendChild(link);\n    }\n    head.appendChild(script);\n    script.onload = resolve;\n    script.onerror = reject;\n  });\n};\nvar mergeDeep = function mergeDeep2(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n  if (!sources.length) {\n    return target;\n  }\n  var source = sources.shift();\n  if (!isPlainObject(target) || !isPlainObject(source)) {\n    return;\n  }\n  for (var key in source) {\n    if (isPlainObject(source[key])) {\n      if (!target[key]) {\n        Object.assign(target, _defineProperty({}, key, {}));\n      }\n      mergeDeep2(target[key], source[key]);\n    } else {\n      Object.assign(target, _defineProperty({}, key, source[key]));\n    }\n  }\n  return mergeDeep2.apply(void 0, [target].concat(sources));\n};\nvar isBrowser = function isBrowser2() {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\") {\n    return false;\n  }\n  return true;\n};\nvar warn = function warn2(text) {\n  var shouldLog = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n  if (!isBrowser() || true) {\n    return;\n  }\n  if (!shouldLog) {\n    return;\n  }\n  console.warn(\"[vue-gtag] \".concat(text));\n};\nvar validateScreenviewShape = function validateScreenviewShape2() {\n  var obj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n  warn('Missing \"appName\" property inside the plugin options.', obj.app_name == null);\n  warn('Missing \"name\" property in the route.', obj.screen_name == null);\n  return obj;\n};\nfunction getPathWithBase() {\n  var path = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n  var base = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n  var pathAsArray = path.split(\"/\");\n  var baseAsArray = base.split(\"/\");\n  if (pathAsArray[0] === \"\" && base[base.length - 1] === \"/\") {\n    pathAsArray.shift();\n  }\n  return baseAsArray.join(\"/\") + pathAsArray.join(\"/\");\n}\nvar getDefaultParams = function getDefaultParams2() {\n  return {\n    bootstrap: true,\n    onReady: null,\n    onError: null,\n    onBeforeTrack: null,\n    onAfterTrack: null,\n    pageTrackerTemplate: null,\n    customResourceURL: \"https://www.googletagmanager.com/gtag/js\",\n    customPreconnectOrigin: \"https://www.googletagmanager.com\",\n    deferScriptLoad: false,\n    pageTrackerExcludedRoutes: [],\n    pageTrackerEnabled: true,\n    enabled: true,\n    disableScriptLoad: false,\n    pageTrackerScreenviewEnabled: false,\n    appName: null,\n    pageTrackerUseFullPath: false,\n    pageTrackerPrependBase: true,\n    pageTrackerSkipSamePath: true,\n    globalDataLayerName: \"dataLayer\",\n    globalObjectName: \"gtag\",\n    defaultGroupName: \"default\",\n    includes: null,\n    config: {\n      id: null,\n      params: {\n        send_page_view: false\n      }\n    }\n  };\n};\nvar params = {};\nvar setOptions = function setOptions2() {\n  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n  var defaultParams = getDefaultParams();\n  params = mergeDeep(defaultParams, options);\n};\nvar getOptions = function getOptions2() {\n  return params;\n};\nvar query = function() {\n  var _window;\n  var _getOptions = getOptions(), globalObjectName = _getOptions.globalObjectName;\n  if (!isBrowser() || typeof window[globalObjectName] === \"undefined\") {\n    return;\n  }\n  (_window = window)[globalObjectName].apply(_window, arguments);\n};\nvar config = function() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var _getOptions = getOptions(), config2 = _getOptions.config, includes = _getOptions.includes;\n  query.apply(void 0, [\"config\", config2.id].concat(args));\n  if (Array.isArray(includes)) {\n    includes.forEach(function(domain) {\n      query.apply(void 0, [\"config\", domain.id].concat(args));\n    });\n  }\n};\nvar assignGlobalProperty = function assignGlobalProperty2(id, value) {\n  if (!isBrowser()) {\n    return;\n  }\n  window[\"ga-disable-\".concat(id)] = value;\n};\nvar disable = function() {\n  var value = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n  var _getOptions = getOptions(), config2 = _getOptions.config, includes = _getOptions.includes;\n  assignGlobalProperty(config2.id, value);\n  if (Array.isArray(includes)) {\n    includes.forEach(function(domain) {\n      return assignGlobalProperty(domain.id, value);\n    });\n  }\n};\nvar optOut = function() {\n  disable(true);\n};\nvar optIn = function() {\n  disable(false);\n};\nvar router;\nvar setRouter = function setRouter2(instance) {\n  router = instance;\n};\nvar getRouter = function getRouter2() {\n  return router;\n};\nvar event = function(name) {\n  var params2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  var _getOptions = getOptions(), includes = _getOptions.includes, defaultGroupName = _getOptions.defaultGroupName;\n  if (params2.send_to == null && Array.isArray(includes) && includes.length) {\n    params2.send_to = includes.map(function(domain) {\n      return domain.id;\n    }).concat(defaultGroupName);\n  }\n  query(\"event\", name, params2);\n};\nvar pageview = function(param) {\n  if (!isBrowser()) {\n    return;\n  }\n  var template;\n  if (typeof param === \"string\") {\n    template = {\n      page_path: param\n    };\n  } else if (param.path || param.fullPath) {\n    var _getOptions = getOptions(), useFullPath = _getOptions.pageTrackerUseFullPath, useBase = _getOptions.pageTrackerPrependBase;\n    var router2 = getRouter();\n    var base = router2 && router2.options.base;\n    var path = useFullPath ? param.fullPath : param.path;\n    template = _objectSpread2(_objectSpread2({}, param.name && {\n      page_title: param.name\n    }), {}, {\n      page_path: useBase ? getPathWithBase(path, base) : path\n    });\n  } else {\n    template = param;\n  }\n  if (template.page_location == null) {\n    template.page_location = window.location.href;\n  }\n  if (template.send_page_view == null) {\n    template.send_page_view = true;\n  }\n  event(\"page_view\", template);\n};\nvar screenview = function(param) {\n  var _getOptions = getOptions(), appName = _getOptions.appName;\n  if (!param) {\n    return;\n  }\n  var template;\n  if (typeof param === \"string\") {\n    template = {\n      screen_name: param\n    };\n  } else {\n    template = param;\n  }\n  template.app_name = template.app_name || appName;\n  event(\"screen_view\", template);\n};\nvar exception = function() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  event.apply(void 0, [\"exception\"].concat(args));\n};\nvar linker = function(params2) {\n  config(\"linker\", params2);\n};\nvar time = function(params2) {\n  event(\"timing_complete\", params2);\n};\nvar set = function() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  query.apply(void 0, [\"set\"].concat(args));\n};\nvar refund = function() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  event.apply(void 0, [\"refund\"].concat(args));\n};\nvar purchase = function(params2) {\n  event(\"purchase\", params2);\n};\nvar customMap = function(map) {\n  config({\n    custom_map: map\n  });\n};\nvar api = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  query,\n  config,\n  optOut,\n  optIn,\n  pageview,\n  screenview,\n  exception,\n  linker,\n  time,\n  set,\n  refund,\n  purchase,\n  customMap,\n  event\n});\nvar attachApi = function attachApi2(app) {\n  app.config.globalProperties.$gtag = api;\n};\nvar registerGlobals = function() {\n  if (!isBrowser()) {\n    return;\n  }\n  var _getOptions = getOptions(), enabled = _getOptions.enabled, globalObjectName = _getOptions.globalObjectName, globalDataLayerName = _getOptions.globalDataLayerName;\n  if (window[globalObjectName] == null) {\n    window[globalDataLayerName] = window[globalDataLayerName] || [];\n    window[globalObjectName] = function() {\n      window[globalDataLayerName].push(arguments);\n    };\n  }\n  window[globalObjectName](\"js\", /* @__PURE__ */ new Date());\n  if (!enabled) {\n    optOut();\n  }\n  return window[globalObjectName];\n};\nvar mergeDefaultParams = function mergeDefaultParams2(params2) {\n  return _objectSpread2({\n    send_page_view: false\n  }, params2);\n};\nvar addConfiguration = function() {\n  var _getOptions = getOptions(), config2 = _getOptions.config, includes = _getOptions.includes;\n  query(\"config\", config2.id, mergeDefaultParams(config2.params));\n  if (Array.isArray(includes)) {\n    includes.forEach(function(domain) {\n      query(\"config\", domain.id, mergeDefaultParams(domain.params));\n    });\n  }\n};\nvar track = function() {\n  var to = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n  var from = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  var _getOptions = getOptions(), appName = _getOptions.appName, proxy = _getOptions.pageTrackerTemplate, useScreenview = _getOptions.pageTrackerScreenviewEnabled, skipSamePath = _getOptions.pageTrackerSkipSamePath;\n  if (skipSamePath && to.path === from.path) {\n    return;\n  }\n  var template = to;\n  if (isFunction(proxy)) {\n    template = proxy(to, from);\n  } else if (useScreenview) {\n    template = validateScreenviewShape({\n      app_name: appName,\n      screen_name: to.name\n    });\n  }\n  if (useScreenview) {\n    screenview(template);\n    return;\n  }\n  pageview(template);\n};\nvar isRouteExcluded = function isRouteExcluded2(route) {\n  var _getOptions = getOptions(), routes = _getOptions.pageTrackerExcludedRoutes;\n  return routes.includes(route.path) || routes.includes(route.name);\n};\nvar addRoutesTracker = function() {\n  var _getOptions2 = getOptions(), onBeforeTrack = _getOptions2.onBeforeTrack, onAfterTrack = _getOptions2.onAfterTrack;\n  var router2 = getRouter();\n  router2.isReady().then(function() {\n    nextTick().then(function() {\n      var currentRoute = router2.currentRoute;\n      addConfiguration();\n      if (isRouteExcluded(currentRoute.value)) {\n        return;\n      }\n      track(currentRoute.value);\n    });\n    router2.afterEach(function(to, from) {\n      nextTick().then(function() {\n        if (isRouteExcluded(to)) {\n          return;\n        }\n        if (isFunction(onBeforeTrack)) {\n          onBeforeTrack(to, from);\n        }\n        track(to, from);\n        if (isFunction(onAfterTrack)) {\n          onAfterTrack(to, from);\n        }\n      });\n    });\n  });\n};\nvar bootstrap = function() {\n  var _getOptions = getOptions(), onReady = _getOptions.onReady, onError = _getOptions.onError, globalObjectName = _getOptions.globalObjectName, globalDataLayerName = _getOptions.globalDataLayerName, config2 = _getOptions.config, customResourceURL = _getOptions.customResourceURL, customPreconnectOrigin = _getOptions.customPreconnectOrigin, deferScriptLoad = _getOptions.deferScriptLoad, pageTrackerEnabled = _getOptions.pageTrackerEnabled, disableScriptLoad = _getOptions.disableScriptLoad;\n  var isPageTrackerEnabled = Boolean(pageTrackerEnabled && getRouter());\n  registerGlobals();\n  if (isPageTrackerEnabled) {\n    addRoutesTracker();\n  } else {\n    addConfiguration();\n  }\n  if (disableScriptLoad) {\n    return;\n  }\n  return load(\"\".concat(customResourceURL, \"?id=\").concat(config2.id, \"&l=\").concat(globalDataLayerName), {\n    preconnectOrigin: customPreconnectOrigin,\n    defer: deferScriptLoad\n  }).then(function() {\n    if (onReady) {\n      onReady(window[globalObjectName]);\n    }\n  })[\"catch\"](function(error) {\n    if (onError) {\n      onError(error);\n    }\n    return error;\n  });\n};\nvar install = function install2(app) {\n  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  var router2 = arguments.length > 2 ? arguments[2] : void 0;\n  attachApi(app);\n  setOptions(options);\n  setRouter(router2);\n  if (getOptions().bootstrap) {\n    bootstrap();\n  }\n};\nexport default install;\nexport { addRoutesTracker, bootstrap, config, customMap, event, exception, install, linker, optIn, optOut, pageview, purchase, query, refund, screenview, set, setOptions, setRouter, time };\n",
      "start": 1712600371778,
      "end": 1712600371902,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1712600371902,
      "end": 1712600371902,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712600371902,
      "end": 1712600371902,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712600371902,
      "end": 1712600371903,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712600371903,
      "end": 1712600371903,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712600371903,
      "end": 1712600371921,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712600371921,
      "end": 1712600371921,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712600371921,
      "end": 1712600371921,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712600371922,
      "end": 1712600371922,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712600371922,
      "end": 1712600371922,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712600371922,
      "end": 1712600371922,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712600371922,
      "end": 1712600371922,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712600371923,
      "end": 1712600371923,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712600371923,
      "end": 1712600371923,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712600371923,
      "end": 1712600371923,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712600371923,
      "end": 1712600371923,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712600371923,
      "end": 1712600371923,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712600371923,
      "end": 1712600371923,
      "order": "normal"
    }
  ]
}
